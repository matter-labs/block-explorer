name: Prividium E2E Tests

on:
  pull_request:
    paths:
      - 'packages/app/**'
      - 'packages/api/**'
      - '.github/workflows/prividium-e2e.yml'
      - 'docker-compose-prividium.yaml'

jobs:
  prividium-e2e:
    runs-on: ubuntu-latest
    container:
      image: mcr.microsoft.com/playwright:v1.54.1-noble
      options: --user 1001
    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: postgres
          POSTGRES_DB: block-explorer
        ports:
          - 5432:5432
        options: >-
          --health-cmd="pg_isready -U postgres"
          --health-interval=5s
          --health-timeout=5s
          --health-retries=5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Create reports directory
        run: mkdir -p packages/app/tests/e2e/reports/

      - name: Generate Prividium Config
        run: |
          # Create temporary Prividium config.js
          cat > packages/app/public/config.js << 'EOF'
          window["##runtimeConfig"] = {
            appEnvironment: "prividium",
            environmentConfig: {
              networks: [
                {
                  name: "prividium",
                  l2NetworkName: "prividium",
                  l2ChainId: 270,
                  rpcUrl: "http://127.0.0.1:4040",
                  apiUrl: "http://127.0.0.1:3020",
                  baseTokenAddress: "0x000000000000000000000000000000000000800A",
                  hostnames: [],
                  icon: "/images/icons/zksync-arrows.svg",
                  maintenance: false,
                  published: true,
                  verificationApiUrl: "http://127.0.0.1:3070",
                  prividium: true,
                  userPanelUrl: "http://127.0.0.1:3001",
                },
              ],
            },
          };
          EOF

      - name: Start Prividium App
        run: |
          # Start the app in development mode with Prividium config
          cd packages/app
          npm run dev -- --host 0.0.0.0 --port 3010 > ./tests/e2e/reports/app.log 2>&1 &

          # Wait for app to be ready with retries
          echo "Waiting for app to be ready..."
          for i in $(seq 1 30); do
            if curl -sL http://127.0.0.1:3010 > /dev/null; then
              echo "App is ready!"
              break
            fi
            if [ $i -eq 30 ]; then
              echo "App failed to start within timeout"
              exit 1
            fi
            echo "Waiting for app to start... attempt $i"
            sleep 5
          done

      - name: Run Prividium E2E Tests
        timeout-minutes: 5
        run: |
          cd packages/app
          xvfb-run --auto-servernum --server-args="-screen 0 1920x1080x24" \
            npx cucumber-js --tags "@prividium"
        env:
          TARGET_ENV: http://127.0.0.1:3010
          PRIVIDIUM_MODE: true
          METAMASK_SETUP_TIMEOUT: 120000

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: prividium-e2e-results
          path: packages/app/tests/e2e/reports/
