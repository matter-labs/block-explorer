name: 'double-zero-proxy'
services:
  app:
    build:
      context: .
      dockerfile: ./packages/app/Dockerfile
    ports:
      - '3010:3010'
    depends_on:
      - proxy
    restart: unless-stopped

  proxy:
    platform: linux/x86_64
    build:
      context: .
      dockerfile: ./packages/proxy/Dockerfile
    ports:
      - "3020:3020"
    env_file: "proxy.env"
    environment:
      SERVER_PORT: 3020
      BLOCK_EXPLORER_API_URL: ${BLOCK_EXPLORER_API_URL}
      SESSION_SECRET: "0101010101010101010101010101010101010101010101010101010101010101"
      CORS_ORIGIN: "localhost:3010"
      RPC_URL: ${TARGET_RPC}

  private-rpc-migrate:
    platform: linux/x86_64
    build:
      context: .
      dockerfile: ./packages/private-rpc/Dockerfile
    command: sh -c "yarn db:push"
    depends_on:
      db-private-rpc:
        condition: service_healthy
    env_file: "proxy.env"
    environment:
      PORT: "3022"
      DATABASE_URL: "postgres://postgres:postgres@db-private-rpc:5432/private-rpc"
      TARGET_RPC: ${TARGET_RPC}


  private-rpc:
    platform: linux/x86_64
    build:
      context: .
      dockerfile: ./packages/private-rpc/Dockerfile
    depends_on:
      db-private-rpc:
        condition: service_healthy
      private-rpc-migrate:
        condition: service_completed_successfully
    ports:
      - '3022:3022'
    env_file: "proxy.env"
    environment:
      PORT: "3022"
      DATABASE_URL: "postgres://postgres:postgres@db-private-rpc:5432/private-rpc"
      TARGET_RPC: ${TARGET_RPC}

  db-private-rpc:
    image: "postgres:14"
    logging:
      driver: none
    volumes:
      - db-private-rpc:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 5s
      timeout: 5s
      retries: 5
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=private-rpc


volumes:
  db-private-rpc: